#! @Chunk SnakeInAlgebroid

#! @Example
LoadPackage( "Algebroids" );
#! true
LoadPackage( "FreydCategoriesForCAP" );
#! true
SwitchGeneralizedMorphismStandard( "cospan" );
snake_quiver := RightQuiver( "q(4)[a:1->2,b:2->3,c:3->4]" );
#! q(4)[a:1->2,b:2->3,c:3->4]
Q := HomalgFieldOfRationals( );
#! Q
A := PathAlgebra( Q, snake_quiver );
#! Q * q
Aoid := Algebroid( A, [ A.abc ] );
#! Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4]
LoadPackage( "LazyCategories" );
#! true
Lazy := LazyCategory( Aoid :
          show_evaluation := true, lazify_range_of_hom_structure := false );
#! LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] )
a := Aoid.a / Lazy; SetLabel( a, "a" ); SetLabel( Source( a ), "1" );
#! <An evaluated morphism in LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] )>
b := Aoid.b / Lazy; SetLabel( b, "b" ); SetLabel( Source( b ), "2" );
#! <An evaluated morphism in LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] )>
c := Aoid.c / Lazy; SetLabel( c, "c" ); SetLabel( Source( c ), "3" );
#! <An evaluated morphism in LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] )>
SetLabel( Target( c ), "4" );
add := AdditiveClosure( Lazy );
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )
a := a / add;
#! <A morphism in AdditiveClosure( LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )
#!  defined by a 1 x 1 matrix of underlying morphisms>
b := b / add;
#! <A morphism in AdditiveClosure( LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )
#!  defined by a 1 x 1 matrix of underlying morphisms>
c := c / add;
#! <A morphism in AdditiveClosure( LazyCategory( Algebroid generated by
#!  the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )
#!  defined by a 1 x 1 matrix of underlying morphisms>
Adelman := AdelmanCategory( add );
#! Adelman category( AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )
a := a / Adelman;
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
b := b / Adelman;
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
c := c / Adelman;
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
d := CokernelProjection( a );
#! <An epimorphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
e := CokernelColift( a, PreCompose( b, c ) );
#! 1.      -> evaluating in Algebroid generated by the right qui...: PreCompose
#! 2.       -> evaluating in Algebroid generated by the right qui...: PreCompose
#! 2.       <- evaluated  in Algebroid generated by the right qui...: PreCompose
#! 1.      <- evaluated  in Algebroid generated by the right qui...: PreCompose
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
f := KernelEmbedding( e );
#! <A monomorphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
g := KernelEmbedding( c );
#! <A monomorphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
h := KernelLift( c, PreCompose( a, b ) );
#! 3.       -> evaluating in Algebroid generated by the right qui...: PreCompose
#! 4.        -> evaluating in Algebroid generated by the right qui...: PreCompose
#! 4.        <- evaluated  in Algebroid generated by the right qui...: PreCompose
#! 3.       <- evaluated  in Algebroid generated by the right qui...: PreCompose
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
i := CokernelProjection( h );
#! <An epimorphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
ff := AsGeneralizedMorphism( f );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
dd := AsGeneralizedMorphism( d );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
bb := AsGeneralizedMorphism( b );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
gg := AsGeneralizedMorphism( g );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
ii := AsGeneralizedMorphism( i );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
ss := PreCompose( [ ff, PseudoInverse( dd ), bb, PseudoInverse( gg ), ii ] );
#! <A morphism in Generalized morphism category of Adelman category(
#! AdditiveClosure( LazyCategory( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
s := HonestRepresentative( ss );
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
j := KernelObjectFunctorial( b, d, e );
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
k := CokernelObjectFunctorial( h, g, b );
#! <A morphism in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
HK := HomologyObject( j, s );
#! <An object in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
HC := HomologyObject( s, k );
#! <An object in Adelman category( AdditiveClosure( LazyCategory(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
#! @EndExample
